---
/* eslint-disable astro/jsx-a11y/media-has-caption */

const {
  index,
  note,
  transportPic,
  transportPicLqip,
  departureTime,
  waitingAreaDeparture,
  cityName,
  returnTime,
  waitingAreaReturn,
  transportType,
  transportName,
  licensePlate,
  transportPrice,
  tripDuration,
  stops
} = Astro.props
---

<section
  class={`space-y-2 bg-[#fcfcfc] dark:bg-[#362d25] shadow rounded p-4 any-hover:shadow-md transition-shadow ${transportType.toLowerCase()}`}
>
  <h2 class="titles text-3xl sm:text-4xl font-bold">
    Horario #{index + 1}
  </h2>

  {note && <p set:html={note} />}

  {
    transportPic !== '' ? (
      <section class="my-2">
        <picture data-loading="lazy">
          <source type="image/avif" data-srcset={`${transportPic}.avif`} />
          <source type="image/webp" data-srcset={`${transportPic}.webp`} />
          <source type="image/jpeg" data-srcset={`${transportPic}.jpg`} />
          <img
            class="h-auto object-cover object-center w-full rounded aspect-[520/358] lazyload"
            alt={`Transporte ${transportName}`}
            decoding="async"
            fetchpriority="low"
            loading="lazy"
            srcset={transportPicLqip}
            data-srcset={`${transportPic}.jpg`}
          />
        </picture>
      </section>
    ) : (
      <div class="lg:hidden">
        <button class="w-full rounded font-semibold space-x-2.5 py-2.5 px-5 transition-colors inline-flex items-center active:outline-none bg-orange-100 dark:bg-[#4c3c2e] active:bg-orange-200 text-orange-500 dark:text-orange-100 bus-pic-btn">
          <span>
            <svg
              class="fill-current"
              viewBox="0 0 24 24"
              width="24"
              height="24"
            >
              <path d="M4 4h3l2-2h6l2 2h3a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2m8 3a5 5 0 0 0-5 5 5 5 0 0 0 5 5 5 5 0 0 0 5-5 5 5 0 0 0-5-5m0 2a3 3 0 0 1 3 3 3 3 0 0 1-3 3 3 3 0 0 1-3-3 3 3 0 0 1 3-3Z" />
            </svg>
          </span>
          <span>Toma una foto del transporte</span>
        </button>
        <section class="bg-orange-300 dark:bg-[#180f06] dark:text-white fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-20 w-full max-w-sm sm:max-w-md shadow-md rounded px-4 py-6 pointer-events-none scale-0 opacity-0 transition-all h-[85vh] flex flex-col pic-container">
          <video
            class="bg-orange-100 dark:bg-hex-2c251f w-full h-full rounded flex-grow bus-image"
            autoplay="autoplay"
          />
          <section class="mt-2">
            <div class="flex gap-4 first-pic-container">
              <button class="w-full rounded font-semibold py-2.5 px-5 transition-colors active:bg-orange-500 active:outline-none bg-orange-400 text-white pic-btn">
                Tomar foto
              </button>
              <button class="w-full rounded font-semibold py-2.5 px-5 transition-colors active:text-orange-500 active:bg-orange-200 active:outline-none bg-orange-100 text-orange-400 cancel-pic-btn">
                Cancelar
              </button>
            </div>
            <div class="flex gap-4 hidden second-pic-container">
              <button class="w-full rounded font-semibold py-2.5 px-5 transition-colors active:bg-orange-500 active:outline-none bg-orange-400 text-white send-p√≠c-btn">
                Enviar foto
              </button>
              <button class="w-full rounded font-semibold py-2.5 px-5 transition-colors active:text-orange-500 active:bg-orange-200 active:outline-none bg-orange-100 text-orange-400 take-pic-btn">
                Tomar de nuevo
              </button>
            </div>
          </section>
        </section>
        <section class="w-full h-87 font-semibold rounded bg-orange-100 dark:bg-hex-2c251f flex flex-col items-center justify-center text-center px-4 py-6 hidden congrats">
          <p class="text-lg">¬°Much√≠simas gracias!</p>
          <p class="px-2 mt-2">
            Tu foto ser√° revisada y cu√°ndo sea aprobada se publicar√° en la
            plataforma. ü•≥üéâ
          </p>
        </section>
      </div>
    )
  }

  <div class="pb-2 scrolltable">
    <table class="whitespace-nowrap border-separate">
      <tbody>
        <tr class="group">
          <td
            class="px-3 py-2 flex items-center group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-l"
          >
            <svg
              class="fill-current mr-2"
              viewBox="0 0 24 24"
              width="24"
              height="24"
            >
              <path
                d="M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2m4.2 14.2L11 13V7h1.5v5.2l4.5 2.7-.8 1.3Z"
              ></path>
            </svg>
            <strong>Hora de salida de Estel√≠</strong>
          </td>
          <td
            class="px-3 py-2 group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-r"
          >
            <span
              class="px-2 py-1 text-green-700 bg-green-100 rounded font-bold"
            >
              {
                // Convert hour (departure_time) to AM/PM format due to the fact
                // that in Nicaragua it's very common to use this format.
                // Use the .replace() method because at 12 o'clock in the afternoon
                // it returns 00 at the beginning.
                new Intl.DateTimeFormat('es-NI', {
                  timeZone: 'UTC',
                  hour12: true,
                  hour: '2-digit',
                  minute: '2-digit'
                })
                  .format(new Date(`2022-02-27T${departureTime}Z`))
                  .replace(/^(00)/, '12')
              }
            </span>
          </td>
        </tr>
        {
          waitingAreaDeparture && (
            <tr class="group">
              <td class="px-3 py-2 flex items-center group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-l">
                <svg
                  class="fill-current mr-2"
                  viewBox="0 0 24 24"
                  width="24"
                  height="24"
                >
                  <path d="M22 7v9c0 .71-.38 1.36-1 1.72v1.53c0 .41-.34.75-.75.75h-.5a.76.76 0 0 1-.75-.75V18h-7v1.25c0 .41-.34.75-.75.75h-.5a.76.76 0 0 1-.75-.75v-1.53A2 2 0 0 1 9 16V7c0-3 3-3 6.5-3S22 4 22 7m-9 8c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1m7 0c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1m0-8h-9v4h9V7M7 9.5A2.5 2.5 0 1 0 4 12v8h1v-8c1.18-.24 2-1.29 2-2.5Z" />
                </svg>
                <strong>Lugar de espera</strong>
              </td>
              <td class="px-3 py-2 group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-r">
                <span class="px-2 py-1 text-green-700 bg-green-100 rounded font-bold">
                  {waitingAreaDeparture}
                </span>
              </td>
            </tr>
          )
        }
        {
          returnTime && (
            <tr class="group">
              <td class="px-3 py-2 flex items-start group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-l">
                <svg
                  class="fill-current mr-2 mt-[3px]"
                  viewBox="0 0 24 24"
                  width="24"
                  height="24"
                >
                  <path d="M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2m4.2 14.2L11 13V7h1.5v5.2l4.5 2.7-.8 1.3Z" />
                </svg>
                <div>
                  <strong class="block">Hora de salida de {cityName}</strong>
                  <small class="block">(Retorno hacia Estel√≠)</small>
                </div>
              </td>
              <td class="px-3 py-2 group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-r">
                <span class="px-2 py-1 text-green-700 bg-green-100 rounded font-bold">
                  {
                    // Convert hour (return_time) to AM/PM format due to the fact
                    // that in Nicaragua it's very common to use this format.
                    // Use the .replace() method because at 12 o'clock in the afternoon
                    // it returns 00 at the beginning.
                    new Intl.DateTimeFormat('es-NI', {
                      timeZone: 'UTC',
                      hour12: true,
                      hour: '2-digit',
                      minute: '2-digit'
                    })
                      .format(new Date(`2022-02-27T${returnTime}Z`))
                      .replace(/^(00)/, '12')
                  }
                </span>
              </td>
            </tr>
          )
        }
        {
          waitingAreaReturn && (
            <tr class="group">
              <td class="px-3 py-2 flex items-start group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-l">
                <svg
                  class="fill-current mr-2 mt-[2px]"
                  viewBox="0 0 24 24"
                  width="24"
                  height="24"
                >
                  <path d="M22 7v9c0 .71-.38 1.36-1 1.72v1.53c0 .41-.34.75-.75.75h-.5a.76.76 0 0 1-.75-.75V18h-7v1.25c0 .41-.34.75-.75.75h-.5a.76.76 0 0 1-.75-.75v-1.53A2 2 0 0 1 9 16V7c0-3 3-3 6.5-3S22 4 22 7m-9 8c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1m7 0c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1m0-8h-9v4h9V7M7 9.5A2.5 2.5 0 1 0 4 12v8h1v-8c1.18-.24 2-1.29 2-2.5Z" />
                </svg>
                <div>
                  <strong class="block">Lugar de espera</strong>
                  <small class="block">(Retorno hacia Estel√≠)</small>
                </div>
              </td>
              <td class="px-3 py-2 group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-r">
                <span class="px-2 py-1 text-green-700 bg-green-100 rounded font-bold">
                  {waitingAreaReturn}
                </span>
              </td>
            </tr>
          )
        }
        <tr class="group">
          <td
            class="px-3 py-2 flex items-center group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-l"
          >
            <svg
              class="fill-current mr-2"
              viewBox="0 0 24 24"
              width="24"
              height="24"
            >
              <path
                d="M18 11H6V6h12m-1.5 11a1.5 1.5 0 0 1-1.5-1.5 1.5 1.5 0 0 1 1.5-1.5 1.5 1.5 0 0 1 1.5 1.5 1.5 1.5 0 0 1-1.5 1.5m-9 0A1.5 1.5 0 0 1 6 15.5 1.5 1.5 0 0 1 7.5 14 1.5 1.5 0 0 1 9 15.5 1.5 1.5 0 0 1 7.5 17M4 16a3 3 0 0 0 1 2.2V20a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-1h8v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-1.8a3 3 0 0 0 1-2.2V6c0-3.5-3.6-4-8-4s-8 .5-8 4v10Z"
              ></path>
            </svg>
            <strong>Tipo de transporte</strong>
          </td>
          <td
            class="px-3 py-2 group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-r"
          >
            <span
              class="px-2 py-1 text-green-700 bg-green-100 rounded font-bold"
            >
              {transportType}
            </span>
          </td>
        </tr>
        {
          transportName && (
            <tr class="group">
              <td class="px-3 py-2 flex items-center group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-l">
                <svg
                  class="fill-current mr-2"
                  viewBox="0 0 24 24"
                  width="24"
                  height="24"
                >
                  <path d="M3 6a2 2 0 0 0-2 2v7h2a3 3 0 0 0 3 3 3 3 0 0 0 3-3h6a3 3 0 0 0 3 3 3 3 0 0 0 3-3h2V8a2 2 0 0 0-2-2H3m-.5 1.5h4V10h-4V7.5m5.5 0h4V10H8V7.5m5.5 0h4V10h-4V7.5m5.5 0h2.5V13L19 11V7.5m-13 6A1.5 1.5 0 0 1 7.5 15 1.5 1.5 0 0 1 6 16.5 1.5 1.5 0 0 1 4.5 15 1.5 1.5 0 0 1 6 13.5m12 0a1.5 1.5 0 0 1 1.5 1.5 1.5 1.5 0 0 1-1.5 1.5 1.5 1.5 0 0 1-1.5-1.5 1.5 1.5 0 0 1 1.5-1.5Z" />
                </svg>
                <strong>Nombre del Transporte</strong>
              </td>
              <td class="px-3 py-2 group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-r">
                <span class="px-2 py-1 text-green-700 bg-green-100 rounded font-bold">
                  {transportName}
                </span>
              </td>
            </tr>
          )
        }
        {
          licensePlate && (
            <tr class="group">
              <td class="px-3 py-2 flex items-center group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-l">
                <svg
                  class="fill-current mr-2"
                  viewBox="0 0 24 24"
                  width="24"
                  height="24"
                >
                  <path d="M20 4a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h16m-9 9H9v2h2v-2m8 0h-6v2h6v-2M7 9H5v2h2V9m12 0H9v2h10V9Z" />
                </svg>
                <strong>Placa del Transporte</strong>
              </td>
              <td class="px-3 py-2 group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-r">
                <span class="px-2 py-1 text-green-700 bg-green-100 rounded font-bold">
                  {licensePlate}
                </span>
              </td>
            </tr>
          )
        }
        <tr class="group">
          <td
            class="px-3 py-2 flex items-center group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-l"
          >
            <svg
              class="fill-current mr-2"
              viewBox="0 0 24 24"
              width="24"
              height="24"
            >
              <path
                d="M11 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0m0 6.7V20H0v-2c0-2.2 3.1-4 7-4 1.5 0 2.9.3 4 .7M24 20H13V3h11v17m-8-8.5a2.5 2.5 0 1 1 5 0 2.5 2.5 0 0 1-5 0M22 7a2 2 0 0 1-2-2h-3a2 2 0 0 1-2 2v9a2 2 0 0 1 2 2h3c0-1.1.9-2 2-2V7Z"
              ></path>
            </svg>
            <strong>Precio del pasaje</strong>
          </td>
          <td
            class="px-3 py-2 group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-r"
          >
            {
              transportPrice !== '' ? (
                <span class="px-2 py-1 text-green-700 bg-green-100 rounded font-bold">
                  {new Intl.NumberFormat('es-NI', {
                    currency: 'NIO',
                    style: 'currency',
                    maximumSignificantDigits: 2
                  }).format(transportPrice)}{' '}
                  por persona
                </span>
              ) : (
                <span class="px-2 py-1 text-red-700 bg-red-100 rounded font-bold">
                  Informaci√≥n no disponible
                </span>
              )
            }
          </td>
        </tr>
        <tr class="group">
          <td
            class="px-3 py-2 flex items-center group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-l"
          >
            <svg
              class="fill-current mr-2"
              viewBox="0 0 24 24"
              width="24"
              height="24"
            >
              <path
                d="M16.5 4v4.3l2.9 1.6-.8 1.3L15 9V4h1.5m-.5 9c1.4 0 2.5-.5 3.5-1.5S21 9.4 21 8s-.5-2.5-1.5-3.5S17.4 3 16 3s-2.6.5-3.5 1.5c-1 1-1.5 2.1-1.5 3.5s.5 2.6 1.5 3.5c1 1 2.1 1.5 3.5 1.5m-2.5 6c.4 0 .8-.2 1-.5.4-.3.5-.6.5-1s-.1-.8-.4-1c-.3-.4-.7-.5-1.1-.5-.4 0-.8.1-1 .4-.4.3-.5.7-.5 1.1 0 .4.1.7.4 1 .3.3.7.5 1.1.5M3 13h8.1A6.6 6.6 0 0 1 9 8H3v5m1.5 6c.4 0 .8-.2 1-.5.4-.3.5-.6.5-1s-.1-.8-.4-1c-.3-.4-.7-.5-1.1-.5-.4 0-.8.1-1 .4-.4.3-.5.7-.5 1.1 0 .4.1.7.4 1 .3.3.7.5 1.1.5M16 1c2 0 3.6.7 5 2 1.3 1.4 2 3 2 5a7 7 0 0 1-6 7v3a3 3 0 0 1-1 2.2V22c0 .3-.1.5-.3.7a1 1 0 0 1-.7.3h-1a1 1 0 0 1-.7-.3 1 1 0 0 1-.3-.7v-1H5v1c0 .3 0 .5-.3.7a1 1 0 0 1-.7.3H3a1 1 0 0 1-.7-.3A1 1 0 0 1 2 22v-1.8A3 3 0 0 1 1 18V8c0-1.6.7-2.7 2-3.2A17 17 0 0 1 9 4h1.2c1.4-2 3.4-3 5.8-3Z"
              ></path>
            </svg>
            <strong>Duraci√≥n del viaje</strong>
          </td>
          <td
            class="px-3 py-2 group-hover:bg-orange-50 dark:group-hover:bg-[#3E352C] transition-colors rounded-r"
          >
            {
              tripDuration !== '' ? (
                <span class="px-2 py-1 text-green-700 bg-green-100 rounded font-bold">
                  {tripDuration} (aproximadamente)
                </span>
              ) : (
                <span class="px-2 py-1 text-red-700 bg-red-100 rounded font-bold">
                  Informaci√≥n no disponible
                </span>
              )
            }
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  {
    stops && (
      <details class="text-orange-500 dark:text-orange-400">
        <summary class="cursor-pointer any-hover:bg-orange-100 dark:any-hover:bg-[#493A2F] px-3 py-2 rounded transition-colors">
          Conoce las principales paradas
        </summary>
        <section class="border border-orange-100 dark:border-[#493A2F] rounded-b p-2">
          <table class="w-full">
            <thead>
              <tr>
                <th class="text-left px-2 py-1">Destino</th>
                <th class="text-left px-2 py-1">Pasaje</th>
              </tr>
            </thead>
            <tbody>
              {stops.map((stop) => (
                <tr class="odd:bg-orange-50 odd:dark:bg-[#493A2F]">
                  <td class="px-2 py-1">{stop.name}</td>
                  <td class="px-2 py-1">
                    {new Intl.NumberFormat('es-NI', {
                      currency: 'NIO',
                      style: 'currency',
                      maximumSignificantDigits: 2
                    }).format(stop.price)}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </section>
      </details>
    )
  }
</section>

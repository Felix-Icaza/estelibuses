---
/* eslint-disable astro/jsx-a11y/media-has-caption */
---

<div class="md:hidden">
  <button
    class="w-full rounded font-semibold space-x-2.5 py-2.5 px-5 transition-colors inline-flex items-center active:outline-none bg-orange-100 dark:bg-[#4c3c2e] active:bg-orange-200 text-orange-500 dark:text-orange-100 bus-pic-btn"
  >
    <span>
      <svg class="fill-current" viewBox="0 0 24 24" width="24" height="24">
        <path
          d="M4 4h3l2-2h6l2 2h3a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2m8 3a5 5 0 0 0-5 5 5 5 0 0 0 5 5 5 5 0 0 0 5-5 5 5 0 0 0-5-5m0 2a3 3 0 0 1 3 3 3 3 0 0 1-3 3 3 3 0 0 1-3-3 3 3 0 0 1 3-3Z"
        ></path>
      </svg>
    </span>
    <span class="text-sm us:text-base">Toma una foto del transporte</span>
  </button>
  <section
    class="bg-orange-300 dark:bg-[#180f06] dark:text-white fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-20 w-full max-w-sm sm:max-w-md shadow-md rounded px-4 py-6 pointer-events-none scale-0 opacity-0 transition-all h-[85vh] flex flex-col pic-container"
  >
    <video
      class="bg-orange-100 dark:bg-[#2c251f] w-full h-full rounded flex-grow bus-image"
      autoplay="autoplay"></video>
    <section class="mt-2">
      <div class="flex gap-4 first-pic-container">
        <button
          class="w-full rounded font-semibold py-2.5 px-5 transition-colors active:bg-orange-500 active:outline-none bg-orange-400 text-white pic-btn"
        >
          Tomar foto
        </button>
        <button
          class="w-full rounded font-semibold py-2.5 px-5 transition-colors active:text-orange-500 active:bg-orange-200 active:outline-none bg-orange-100 text-orange-400 cancel-pic-btn"
        >
          Cancelar
        </button>
      </div>
      <div class="flex gap-4 hidden second-pic-container">
        <button
          class="w-full rounded font-semibold py-2.5 px-5 transition-colors active:bg-orange-500 active:outline-none bg-orange-400 text-white send-pÃ­c-btn"
        >
          Enviar foto
        </button>
        <button
          class="w-full rounded font-semibold py-2.5 px-5 transition-colors active:text-orange-500 active:bg-orange-200 active:outline-none bg-orange-100 text-orange-400 take-pic-btn"
        >
          Tomar de nuevo
        </button>
      </div>
    </section>
  </section>
  <section
    class="w-full h-87 font-semibold rounded bg-orange-100 dark:bg-[#2c251f] flex flex-col items-center justify-center text-center px-4 py-6 hidden congrats"
  >
    <p class="text-lg">Â¡MuchÃ­simas gracias!</p>
    <p class="px-2 mt-2">
      Tu foto serÃ¡ revisada y cuÃ¡ndo sea aprobada se publicarÃ¡ en la plataforma.
      ðŸ¥³ðŸŽ‰
    </p>
  </section>
</div>

<script>
  /**
   * TODO: Optimize code
   */

  import { initializeApp } from 'firebase/app'
  import { getStorage, ref, uploadString } from 'firebase/storage'

  const firebaseConfig = {
    apiKey: 'AIzaSyAqPF5z2zeJCAXKmnAV6gfapspOK4joCEs',
    authDomain: 'buses-esteli-d2d5e.firebaseapp.com',
    projectId: 'buses-esteli-d2d5e',
    storageBucket: 'buses-esteli-d2d5e.appspot.com',
    messagingSenderId: '47347043568',
    appId: '1:47347043568:web:e1b9a83b88c35fe1a0c635',
    measurementId: 'G-4QFJH1D53Q'
  }

  const firebaseApp = initializeApp(firebaseConfig)
  const storage = getStorage(firebaseApp)

  const busPicBtns = document.querySelectorAll('.bus-pic-btn')
  const picContainer = document.querySelectorAll('.pic-container')
  const busImage = document.querySelectorAll('.bus-image')
  const picBtn = document.querySelectorAll('.pic-btn')
  const sendPicBtn = document.querySelectorAll('.send-pÃ­c-btn')
  const cancelPicBtn = document.querySelectorAll('.cancel-pic-btn')

  const congrats = document.querySelectorAll('.congrats')

  const firstPicContainer = document.querySelectorAll('.first-pic-container')
  const secondPicContainer = document.querySelectorAll('.second-pic-container')

  const takePicBtn = document.querySelectorAll('.take-pic-btn')

  const bgModalShare = document.getElementById('bg-modal-share')
  const modalBusPic = document.getElementById('modal-bus-pic')
  const recomendationPicBtn = document.querySelector('.recommendation-pic')
  const noScrollOnModal = 'overflow: hidden;'

  let stream
  let pic

  const soundPage = new Audio('/sounds/switch-tap.mp3')

  const supportDevices =
    'mediaDevices' in navigator && 'getUserMedia' in navigator.mediaDevices

  busPicBtns.forEach((busPicBtn, index) => {
    if (!supportDevices) {
      busPicBtn.classList.add('hidden')
    }

    window.addEventListener('offline', () => {
      if (!navigator.onLine) {
        busPicBtn.classList.add('hidden')
      } else {
        busPicBtn.classList.remove('hidden')
      }
    })

    window.addEventListener('online', () => {
      if (!navigator.onLine) {
        busPicBtn.classList.add('hidden')
      } else {
        busPicBtn.classList.remove('hidden')
      }
    })

    busPicBtn.addEventListener('click', async () => {
      if (localStorage.getItem('sounds_enabled') === 'true') {
        soundPage.play()
      }

      if (
        'vibrate' in navigator &&
        localStorage.getItem('sounds_enabled') === 'false'
      ) {
        navigator.vibrate(80)
      }

      bgModalShare.classList.replace('opacity-0', 'opacity-100')

      modalBusPic.classList.replace(
        'pointer-events-none',
        'pointer-events-auto'
      )
      modalBusPic.classList.replace('opacity-0', 'opacity-100')
      modalBusPic.classList.replace('scale-0', 'scale-100')

      document.documentElement.setAttribute('style', noScrollOnModal)
      document.body.setAttribute('style', noScrollOnModal)

      stream = await navigator.mediaDevices.getUserMedia({
        audio: false,
        video: {
          width: 1200,
          height: 827,
          facingMode: 'environment'
        }
      })

      busImage[index].srcObject = stream

      picContainer[index].classList.replace(
        'pointer-events-none',
        'pointer-events-auto'
      )
      picContainer[index].classList.replace('opacity-0', 'opacity-100')
      picContainer[index].classList.replace('scale-0', 'scale-100')

      bgModalShare.classList.replace('opacity-0', 'opacity-100')

      document.documentElement.setAttribute('style', noScrollOnModal)
      document.body.setAttribute('style', noScrollOnModal)
    })

    picBtn[index].addEventListener('click', () => {
      if (localStorage.getItem('sounds_enabled') === 'true') {
        soundPage.play()
      }

      if (
        'vibrate' in navigator &&
        localStorage.getItem('sounds_enabled') === 'false'
      ) {
        navigator.vibrate(80)
      }

      busImage[index].pause()
      stream.getTracks()[0].stop()

      const canvasPic = document.createElement('canvas')
      canvasPic.setAttribute('width', '1200')
      canvasPic.setAttribute('height', '827')

      const context = canvasPic.getContext('2d')
      context.drawImage(busImage[index], 0, 0)

      pic = context.canvas.toDataURL()

      firstPicContainer[index].classList.add('hidden')

      secondPicContainer[index].classList.add('up')
      secondPicContainer[index].classList.remove('hidden')
    })

    sendPicBtn[index].addEventListener('click', async () => {
      if (localStorage.getItem('sounds_enabled') === 'true') {
        soundPage.play()
      }

      if (
        'vibrate' in navigator &&
        localStorage.getItem('sounds_enabled') === 'false'
      ) {
        navigator.vibrate(80)
      }

      const nameImage = `${window.location.pathname
        .replace(/\//, '')
        .replace(/\//, '-')}-${document
        .querySelectorAll('.titles')
        [index].textContent.toLowerCase()
        .replace(' ', '')
        .replace('#', '-')}`
      const storageRef = ref(storage, nameImage)

      console.log(storage)

      await uploadString(storageRef, pic, 'data_url')

      picContainer[index].classList.replace(
        'pointer-events-auto',
        'pointer-events-none'
      )
      picContainer[index].classList.replace('opacity-100', 'opacity-0')
      picContainer[index].classList.replace('scale-100', 'scale-0')

      bgModalShare.classList.replace('opacity-100', 'opacity-0')

      document.documentElement.removeAttribute('style')
      document.body.removeAttribute('style')

      busPicBtns[index].classList.add('hidden')
      congrats[index].classList.remove('hidden')

      setTimeout(() => {
        busPicBtns[index].classList.remove('hidden')
        busPicBtns[index].classList.add('up')
        congrats[index].classList.add('hidden')
      }, 7500)
    })

    cancelPicBtn[index].addEventListener('click', () => {
      if (localStorage.getItem('sounds_enabled') === 'true') {
        soundPage.play()
      }

      if (
        'vibrate' in navigator &&
        localStorage.getItem('sounds_enabled') === 'false'
      ) {
        navigator.vibrate(80)
      }

      stream.getTracks()[0].stop()

      picContainer[index].classList.replace(
        'pointer-events-auto',
        'pointer-events-none'
      )
      picContainer[index].classList.replace('opacity-100', 'opacity-0')
      picContainer[index].classList.replace('scale-100', 'scale-0')

      bgModalShare.classList.replace('opacity-100', 'opacity-0')

      document.documentElement.removeAttribute('style')
      document.body.removeAttribute('style')
    })

    takePicBtn[index].addEventListener('click', async () => {
      if (localStorage.getItem('sounds_enabled') === 'true') {
        soundPage.play()
      }

      if (
        'vibrate' in navigator &&
        localStorage.getItem('sounds_enabled') === 'false'
      ) {
        navigator.vibrate(80)
      }

      stream = await navigator.mediaDevices.getUserMedia({
        audio: false,
        video: {
          width: 1200,
          height: 827,
          facingMode: 'environment'
        }
      })

      busImage[index].srcObject = stream

      firstPicContainer[index].classList.add('up')
      firstPicContainer[index].classList.remove('hidden')

      secondPicContainer[index].classList.add('hidden')
    })
  })

  recomendationPicBtn.addEventListener('click', () => {
    if (localStorage.getItem('sounds_enabled') === 'true') {
      soundPage.play()
    }

    if (
      'vibrate' in navigator &&
      localStorage.getItem('sounds_enabled') === 'false'
    ) {
      navigator.vibrate(80)
    }

    modalBusPic.classList.replace('pointer-events-auto', 'pointer-events-none')
    modalBusPic.classList.replace('opacity-100', 'opacity-0')
    modalBusPic.classList.replace('scale-100', 'scale-0')
  })
</script>
